{"version":3,"sources":["github.svg","Components/Footer.jsx","Components/Welcome.jsx","Components/Chat.jsx","App.jsx","index.js"],"names":["Footer","href","target","rel","src","Logo","alt","Welcome","className","action","type","name","id","placeholder","required","socket","io","process","Chat","props","username","queryString","parse","location","search","useState","message","setMessage","messages","setMessages","useEffect","on","msg","document","getElementById","scrollTo","scrollHeight","off","renderMessages","map","index","onSubmit","e","preventDefault","emit","reset","autoFocus","autoComplete","onChange","value","App","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"mLAAe,MAA0B,mC,OCG1B,SAASA,IACvB,OACC,iCACC,mBACCC,KAAK,2CACLC,OAAO,SACPC,IAAI,sBAHL,SAKC,qBAAKC,IAAKC,EAAMC,IAAI,eCRT,SAASC,IACvB,OACC,qCACC,+BACC,sBAAKC,UAAU,YAAf,UACC,sBAAKA,UAAU,eAAf,UACC,uDACA,6GAKD,qBAAKA,UAAU,yBAAf,SACC,uBAAMC,OAAO,QAAQD,UAAU,cAA/B,UACC,uBACCE,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,YAAY,aACZC,UAAQ,IAET,wBAAQN,UAAU,qBAAlB,4BAKJ,cAACR,EAAD,O,6CCvBGe,EAASC,aAAGC,iCAEH,SAASC,EAAKC,GAAO,IAE5BC,EAAYC,IAAYC,MAAMH,EAAMI,SAASC,QAA7CJ,SAF4B,EAGLK,mBAAS,IAHJ,mBAG5BC,EAH4B,KAGnBC,EAHmB,OAIHF,mBAAS,IAJN,mBAI5BG,EAJ4B,KAIlBC,EAJkB,KAMnCC,qBAAU,WAWT,OARAf,EAAOgB,GAAG,gBAAgB,SAAAC,GACzBH,EAAY,GAAD,mBAAKD,GAAL,CAAeI,KAG1BC,SACEC,eAAe,YACfC,SAAS,EAAGF,SAASC,eAAe,YAAYE,iBAE5C,WAENrB,EAAOsB,IAAI,mBAEV,CAACT,IAIJ,IAgBMU,EAAiBV,EAASW,KAAI,SAACP,EAAKQ,GAAN,OACnC,qBAAIhC,UAAU,WAAd,UACC,qBAAKA,UAAU,OAAf,SACC,mCAASwB,EAAIrB,KAAb,SAED,qBAAKH,UAAU,UAAf,SAA0BwB,EAAIA,QAJDQ,MAQ/B,OACC,qCACC,+BACC,sBAAKhC,UAAU,oCAAf,UACC,qBAAKA,UAAU,gBAAgBI,GAAG,WAAlC,SACC,6BAAK0B,MAEN,uBAAMG,SAvBW,SAAAC,GACpBA,EAAEC,iBACF5B,EAAO6B,KAAK,eAAgBlB,GAC5BgB,EAAExC,OAAO2C,SAoBwBrC,UAAU,WAAxC,UACC,uBACCE,KAAK,OACLC,KAAK,MACLC,GAAG,MACHkC,WAAW,EACXC,aAAa,MACbC,SAvCa,SAAAN,GAClBf,EAAW,CACVhB,KAAMS,EACNY,IAAKU,EAAExC,OAAO+C,WAsCX,wBAAQzC,UAAU,UAAUE,KAAK,SAAjC,qBAID,sBAAKF,UAAU,eAAf,2BACe,iCAASY,YAI1B,cAACpB,EAAD,O,MC7EY,SAASkD,IACvB,OACC,cAAC,IAAD,UACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9C,IACjC,cAAC,IAAD,CAAO6C,KAAK,QAAQC,UAAWnC,SCPnCoC,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACN,EAAD,MAEDjB,SAASC,eAAe,W","file":"static/js/main.8728834e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.e64800e2.svg\";","import React from \"react\";\nimport Logo from \"../github.svg\";\n\nexport default function Footer() {\n\treturn (\n\t\t<footer>\n\t\t\t<a\n\t\t\t\thref=\"https://github.com/daniel-ulises/ChatApp\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t\t<img src={Logo} alt=\"Github\" />\n\t\t\t</a>\n\t\t</footer>\n\t);\n}\n","import React from \"react\";\nimport Footer from \"./Footer\";\n\nexport default function Welcome() {\n\treturn (\n\t\t<>\n\t\t\t<main>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"card welcome\">\n\t\t\t\t\t\t<h3>Welcome to the chat. </h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tTo join just give us a desired username for the session and click\n\t\t\t\t\t\t\t\"Join!\"\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card login flex-column\">\n\t\t\t\t\t\t<form action=\"/chat\" className=\"flex-column\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\tplaceholder=\"Set a name\"\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<button className=\"primary self-right\">Join</button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n","import React, {useState, useEffect} from \"react\";\nimport Footer from \"./Footer\";\n// Get the username from the previously inserted form\nimport queryString from \"query-string\";\nimport {io} from \"socket.io-client\";\n// Initialize SocketIO and connect it to the server\nconst socket = io(process.env.REACT_APP_ORIGIN_SERVER);\n\nexport default function Chat(props) {\n\t// Set the queried name from the previous form as the username\n\tconst {username} = queryString.parse(props.location.search);\n\tconst [message, setMessage] = useState({});\n\tconst [messages, setMessages] = useState([]);\n\n\tuseEffect(() => {\n\t\t// When a message is sent by either user, add them to the\n\t\t// messages array to be displayed in the chat\n\t\tsocket.on(\"chat message\", msg => {\n\t\t\tsetMessages([...messages, msg]);\n\n\t\t\t// Make the chat be always scrolled to the bottom\n\t\t\tdocument\n\t\t\t\t.getElementById(\"scroller\")\n\t\t\t\t.scrollTo(0, document.getElementById(\"scroller\").scrollHeight);\n\t\t});\n\t\treturn () => {\n\t\t\t// This prevents the messages from displaying multiple times\n\t\t\tsocket.off(\"chat message\");\n\t\t};\n\t}, [messages]);\n\n\t// We get the user input from the text field and assign\n\t// that to our state\n\tconst inputValue = e => {\n\t\tsetMessage({\n\t\t\tname: username,\n\t\t\tmsg: e.target.value,\n\t\t});\n\t};\n\n\t// When a message is sent, we will add our current message to\n\t// the messages array, which will be then rendered in the chat\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tsocket.emit(\"chat message\", message);\n\t\te.target.reset();\n\t};\n\n\t// Mapping the messages array and have the render in the chat\n\tconst renderMessages = messages.map((msg, index) => (\n\t\t<li className=\"flex-row\" key={index}>\n\t\t\t<div className=\"name\">\n\t\t\t\t<strong>{msg.name}:</strong>\n\t\t\t</div>\n\t\t\t<div className=\"message\">{msg.msg}</div>\n\t\t</li>\n\t));\n\n\treturn (\n\t\t<>\n\t\t\t<main>\n\t\t\t\t<div className=\"container message-box flex-column\">\n\t\t\t\t\t<div className=\"card messages\" id=\"scroller\">\n\t\t\t\t\t\t<ul>{renderMessages}</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form onSubmit={handleSubmit} className=\"flex-row\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"msg\"\n\t\t\t\t\t\t\tid=\"msg\"\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tonChange={inputValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"connected-as\">\n\t\t\t\t\t\tConnected as: <strong>{username}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport Chat from \"./Components/Chat\";\nimport \"./main.css\";\n\nexport default function App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={Welcome} />\n\t\t\t\t<Route path=\"/chat\" component={Chat} />\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}