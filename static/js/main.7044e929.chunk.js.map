{"version":3,"sources":["github.svg","Components/Footer.jsx","Components/Welcome.jsx","Components/Chat.jsx","App.jsx","index.js"],"names":["Footer","href","target","rel","src","Logo","alt","Welcome","useState","userName","setUserName","className","type","name","id","placeholder","onChange","e","value","required","to","pathname","state","socket","io","process","Chat","props","location","message","setMessage","messages","setMessages","useEffect","on","msg","document","getElementById","scrollTo","scrollHeight","off","renderMessages","map","index","onSubmit","preventDefault","emit","reset","autoFocus","autoComplete","App","basename","exact","path","component","ReactDOM","render","StrictMode"],"mappings":"mMAAe,MAA0B,mC,OCG1B,SAASA,IACvB,OACC,iCACC,mBACCC,KAAK,2CACLC,OAAO,SACPC,IAAI,sBAHL,SAKC,qBAAKC,IAAKC,EAAMC,IAAI,eCPT,SAASC,IAAW,IAAD,EACDC,mBAAS,IADR,mBAC1BC,EAD0B,KAChBC,EADgB,KAMjC,OACC,qCACC,+BACC,sBAAKC,UAAU,YAAf,UACC,sBAAKA,UAAU,eAAf,UACC,uDACA,6GAKD,qBAAKA,UAAU,yBAAf,SACC,uBAAMA,UAAU,cAAhB,UACC,uBACCC,KAAK,OACLC,KAAK,WACLC,GAAG,WACHC,YAAY,aACZC,SArBc,SAAAC,GACpBP,EAAYO,EAAEf,OAAOgB,QAqBfC,UAAQ,IAET,cAAC,IAAD,CACCC,GAAI,CACHC,SAAU,QACVC,MAAO,CAACb,SAAUA,IAHpB,SAMC,wBAAQE,UAAU,qBAAlB,8BAML,cAACX,EAAD,O,oBCvCGuB,EAASC,aAAGC,iCAEH,SAASC,EAAKC,GAAO,MAEHnB,mBAASmB,EAAMC,SAASN,MAAMb,UAF3B,mBAE5BA,EAF4B,aAGLD,mBAAS,KAHJ,mBAG5BqB,EAH4B,KAGnBC,EAHmB,OAIHtB,mBAAS,IAJN,mBAI5BuB,EAJ4B,KAIlBC,EAJkB,KAMnCC,qBAAU,WAWT,OARAV,EAAOW,GAAG,gBAAgB,SAAAC,GACzBH,EAAY,GAAD,mBAAKD,GAAL,CAAeI,KAG1BC,SACEC,eAAe,YACfC,SAAS,EAAGF,SAASC,eAAe,YAAYE,iBAE5C,WAENhB,EAAOiB,IAAI,mBAEV,CAACT,IAIJ,IAgBMU,EAAiBV,EAASW,KAAI,SAACP,EAAKQ,GAAN,OACnC,qBAAIhC,UAAU,WAAd,UACC,qBAAKA,UAAU,OAAf,SACC,mCAASwB,EAAItB,KAAb,SAED,qBAAKF,UAAU,UAAf,SAA0BwB,EAAIA,QAJDQ,MAQ/B,OACC,qCACC,+BACC,sBAAKhC,UAAU,oCAAf,UACC,qBAAKA,UAAU,gBAAgBG,GAAG,WAAlC,SACC,6BAAK2B,MAEN,uBAAMG,SAvBW,SAAA3B,GACpBA,EAAE4B,iBACFtB,EAAOuB,KAAK,eAAgBjB,GAC5BZ,EAAEf,OAAO6C,SAoBwBpC,UAAU,WAAxC,UACC,uBACCC,KAAK,OACLC,KAAK,MACLC,GAAG,MACHkC,WAAW,EACXC,aAAa,MACbjC,SAvCa,SAAAC,GAClBa,EAAW,CACVjB,KAAMJ,EACN0B,IAAKlB,EAAEf,OAAOgB,WAsCX,wBAAQP,UAAU,UAAUC,KAAK,SAAjC,qBAID,sBAAKD,UAAU,eAAf,2BACe,iCAASF,YAI1B,cAACT,EAAD,O,MC3EY,SAASkD,IACvB,OACC,eAAC,IAAD,CAAQC,SAAS,IAAjB,UACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAW/C,IACxC,cAAC,IAAD,CAAO8C,KAAK,QAAQC,UAAW5B,OCNlC6B,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAACP,EAAD,MAEDd,SAASC,eAAe,W","file":"static/js/main.7044e929.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.e64800e2.svg\";","import React from \"react\";\nimport Logo from \"../github.svg\";\n\nexport default function Footer() {\n\treturn (\n\t\t<footer>\n\t\t\t<a\n\t\t\t\thref=\"https://github.com/daniel-ulises/ChatApp\"\n\t\t\t\ttarget=\"_blank\"\n\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t>\n\t\t\t\t<img src={Logo} alt=\"Github\" />\n\t\t\t</a>\n\t\t</footer>\n\t);\n}\n","import React, {useState} from \"react\";\nimport Footer from \"./Footer\";\nimport {Link} from \"react-router-dom\";\n\nexport default function Welcome() {\n\tconst [userName, setUserName] = useState(\"\");\n\n\tconst handleChange = e => {\n\t\tsetUserName(e.target.value);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<main>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"card welcome\">\n\t\t\t\t\t\t<h3>Welcome to the chat. </h3>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tTo join just give us a desired username for the session and click\n\t\t\t\t\t\t\t\"Join!\"\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card login flex-column\">\n\t\t\t\t\t\t<form className=\"flex-column\">\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\t\tid=\"username\"\n\t\t\t\t\t\t\t\tplaceholder=\"Set a name\"\n\t\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tto={{\n\t\t\t\t\t\t\t\t\tpathname: \"/chat\",\n\t\t\t\t\t\t\t\t\tstate: {userName: userName},\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<button className=\"primary self-right\">Join</button>\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n","import React, {useState, useEffect} from \"react\";\nimport Footer from \"./Footer\";\nimport {io} from \"socket.io-client\";\n// Initialize SocketIO and connect it to the server\nconst socket = io(process.env.REACT_APP_ORIGIN_SERVER);\n\nexport default function Chat(props) {\n\t// Get the username inserted from the welcome page with location.state.userName\n\tconst [userName, setUserName] = useState(props.location.state.userName);\n\tconst [message, setMessage] = useState({});\n\tconst [messages, setMessages] = useState([]);\n\n\tuseEffect(() => {\n\t\t// When a message is sent by either user, add them to the\n\t\t// messages array to be displayed in the chat\n\t\tsocket.on(\"chat message\", msg => {\n\t\t\tsetMessages([...messages, msg]);\n\n\t\t\t// Make the chat be always scrolled to the bottom\n\t\t\tdocument\n\t\t\t\t.getElementById(\"scroller\")\n\t\t\t\t.scrollTo(0, document.getElementById(\"scroller\").scrollHeight);\n\t\t});\n\t\treturn () => {\n\t\t\t// This prevents the messages from displaying multiple times\n\t\t\tsocket.off(\"chat message\");\n\t\t};\n\t}, [messages]);\n\n\t// We get the user input from the text field and assign\n\t// that to our state\n\tconst inputValue = e => {\n\t\tsetMessage({\n\t\t\tname: userName,\n\t\t\tmsg: e.target.value,\n\t\t});\n\t};\n\n\t// When a message is sent, we will add our current message to\n\t// the messages array, which will be then rendered in the chat\n\tconst handleSubmit = e => {\n\t\te.preventDefault();\n\t\tsocket.emit(\"chat message\", message);\n\t\te.target.reset();\n\t};\n\n\t// Mapping the messages array and have the render in the chat\n\tconst renderMessages = messages.map((msg, index) => (\n\t\t<li className=\"flex-row\" key={index}>\n\t\t\t<div className=\"name\">\n\t\t\t\t<strong>{msg.name}:</strong>\n\t\t\t</div>\n\t\t\t<div className=\"message\">{msg.msg}</div>\n\t\t</li>\n\t));\n\n\treturn (\n\t\t<>\n\t\t\t<main>\n\t\t\t\t<div className=\"container message-box flex-column\">\n\t\t\t\t\t<div className=\"card messages\" id=\"scroller\">\n\t\t\t\t\t\t<ul>{renderMessages}</ul>\n\t\t\t\t\t</div>\n\t\t\t\t\t<form onSubmit={handleSubmit} className=\"flex-row\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"msg\"\n\t\t\t\t\t\t\tid=\"msg\"\n\t\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tonChange={inputValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button className=\"primary\" type=\"submit\">\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div className=\"connected-as\">\n\t\t\t\t\t\tConnected as: <strong>{userName}</strong>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</>\n\t);\n}\n","import React from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Welcome from \"./Components/Welcome\";\nimport Chat from \"./Components/Chat\";\nimport \"./main.css\";\n\nexport default function App() {\n\treturn (\n\t\t<Router basename=\"/\">\n\t\t\t<Route exact path=\"/welcome\" component={Welcome} />\n\t\t\t<Route path=\"/chat\" component={Chat} />\n\t\t</Router>\n\t);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}